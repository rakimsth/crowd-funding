{"version":3,"sources":["components/Navbar.js","components/Main.js","global/Loader.js","assets/crowfunding.jpg","components/App.js","index.js"],"names":["Navbar","account","className","href","target","rel","Button","variant","Main","closeProject","createProject","fundProject","updatedProject","projects","map","p","percent","balance","Math","round","Number","window","web3","utils","fromWei","daysLeft","endDate","ceil","Date","getTime","borderDesigns","useState","show","setShow","handleClose","nameRef","React","useRef","descRef","endDateRef","targetRef","targetAmt","setTargetAmt","id","Modal","size","onHide","backdrop","keyboard","Header","closeButton","Title","Body","onSubmit","event","preventDefault","name","current","value","desc","closingDate","valueOf","toWei","toString","Row","Col","htmlFor","type","ref","placeholder","required","maxLength","pattern","onChange","e","evt","test","Footer","onClick","form","length","project","Card","border","floor","random","exists","style","position","top","left","Text","ProgressBar","animated","now","label","ListGroup","ListGroupItem","String","fontSize","owner","color","float","document","getElementById","DropdownButton","title","marginLeft","Dropdown","Item","as","Alert","defaultProps","Loader","App","currentAccount","setCurrentAccount","setProjects","loading","setLoading","crowdFunding","setCrowdFunding","loadWeb3","a","ethereum","Web3","enable","eth","getAccounts","accounts","Swal","fire","icon","text","currentProvider","getDatafromWeb3","abi","CrowdFunding","address","process","marketplace","Contract","methods","projectCount","call","projectCounter","projectLists","i","push","send","from","once","receipt","catch","message","amount","WeiAmt","err","code","useEffect","backgroundImage","bgimage","height","backgroundRepeat","backgroundSize","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49341245.chunk.js","sourcesContent":["/* eslint-disable no-alert */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nfunction Navbar({ account }) {\n  return (\n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-1 shadow\">\n      <a\n        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n        href=\"https://rumsan.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Rumsan Academy\n      </a>\n      {account ? <Button variant=\"light\">{account}</Button> : <Button variant=\"danger\">N/A</Button>}\n    </nav>\n  );\n}\nNavbar.propTypes = {\n  account: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Modal,\n  Button,\n  Card,\n  ProgressBar,\n  ListGroup,\n  ListGroupItem,\n  Dropdown,\n  DropdownButton,\n  Alert,\n} from 'react-bootstrap';\n\nfunction Main({ closeProject, createProject, fundProject, projects }) {\n  const updatedProject = projects.map((p) => {\n    p.percent = p.balance\n      ? Math.round(\n          (Number(window.web3.utils.fromWei(p.balance, 'ether')) /\n            Number(window.web3.utils.fromWei(p.target, 'ether'))) *\n            100,\n        )\n      : 0;\n    p.daysLeft = p.endDate\n      ? Math.ceil((Number(p.endDate) - new Date().getTime()) / 1000 / 60 / 60 / 24)\n      : '0';\n    return p;\n  });\n  const borderDesigns = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark'];\n  // Handle Modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  // Form Handle\n  const nameRef = React.useRef();\n  const descRef = React.useRef();\n  const endDateRef = React.useRef();\n  const targetRef = React.useRef();\n  const [targetAmt, setTargetAmt] = useState('');\n  const handleTargetChange = (evt) => {\n    const decimalPattern = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n    if (decimalPattern.test(evt.target.value)) setTargetAmt(evt.target.value);\n  };\n\n  return (\n    <div id=\"content\" className=\"mt-2\">\n      <div>\n        <Modal size=\"lg\" show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add New Project</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form\n              id=\"addNewProject\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                const name = nameRef.current.value;\n                const desc = descRef.current.value;\n                const closingDate = new Date(endDateRef.current.value).valueOf();\n                const target = window.web3.utils.toWei(targetRef.current.value.toString(), 'Ether');\n                createProject(name, desc, closingDate, target);\n              }}\n            >\n              <Row>\n                <Col>\n                  <div className=\"form-group mr-sm-2 mb-sm-2\">\n                    <label htmlFor=\"projectName\">Project Name</label>\n                    <input\n                      id=\"projectName\"\n                      type=\"text\"\n                      ref={nameRef}\n                      className=\"form-control\"\n                      placeholder=\"Project Name\"\n                      required\n                    />\n                  </div>\n                </Col>\n                <Col>\n                  <div className=\"form-group mr-sm-2 mb-sm-2\">\n                    <label htmlFor=\"closingDate\">Project Closing Date</label>\n                    <input\n                      id=\"closingDate\"\n                      className=\"form-control\"\n                      type=\"datetime-local\"\n                      ref={endDateRef}\n                      placeholder=\"Closing Date\"\n                      required\n                    />\n                  </div>\n                </Col>\n                <Col>\n                  <div className=\"form-group mr-sm-2 mb-sm-2\">\n                    <label htmlFor=\"projectTarget\">Target Amount (Eth)</label>\n                    <input\n                      id=\"projectTarget\"\n                      type=\"text\"\n                      ref={targetRef}\n                      className=\"form-control\"\n                      placeholder=\"Project Target\"\n                      maxLength={9}\n                      pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                      onChange={(e) => handleTargetChange(e)}\n                      value={targetAmt}\n                      required\n                    />\n                  </div>\n                </Col>\n                <div className=\"form-group mr-sm-2 mb-sm-2\">\n                  <input\n                    id=\"projectDesc\"\n                    type=\"text\"\n                    ref={descRef}\n                    className=\"form-control\"\n                    placeholder=\"Project Description\"\n                    required\n                  />\n                </div>\n              </Row>\n              <input className=\"btn btn-danger m-2\" type=\"reset\" value=\"Reset\" />\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button type=\"submit\" form=\"addNewProject\" variant=\"primary\">\n              Add Project\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-10 col-sm-6\">\n          <h2>Our Latest Projects</h2>\n        </div>\n        <div className=\"col-md-2 col-sm-6\">\n          <Button variant=\"primary\" className=\"float-right\" onClick={handleShow}>\n            Add New Project\n          </Button>\n        </div>\n      </div>\n      <div className=\"container-fluid justify-content-center\">\n        <div className=\"row text-center\">\n          {updatedProject && updatedProject.length > 0 ? (\n            updatedProject.map((project) => (\n              <div className=\"col-md-4\" key={project.id}>\n                <Card\n                  border={borderDesigns[Math.floor(Math.random() * borderDesigns.length)]}\n                  className=\"m-2\"\n                >\n                  <Card.Body>\n                    {project && project.exists ? (\n                      <span\n                        className=\"btn btn-success\"\n                        style={{ position: 'absolute', top: '7px', left: '-10px' }}\n                      >\n                        Open\n                      </span>\n                    ) : (\n                      <span\n                        className=\"btn btn-danger\"\n                        style={{ position: 'absolute', top: '7px', left: '-10px' }}\n                      >\n                        Closed\n                      </span>\n                    )}\n                    <Card.Title>\n                      {project && project.name ? project.name.toString() : '-'}\n                    </Card.Title>\n                    <Card.Text>\n                      <em>{project && project.desc ? project.desc.toString() : '0'}</em>\n                    </Card.Text>\n                    <ProgressBar animated now={project.percent} label={`${project.percent}%`} />\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem>\n                        {project && project.daysLeft && project.daysLeft >= 0\n                          ? project.daysLeft\n                          : '-'}\n                        <em> Days Left</em>\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        Target/Collected:&nbsp;\n                        {project && project.target && project.balance\n                          ? `${window.web3.utils.fromWei(project.target, 'Ether')}\n                        / ${String(window.web3.utils.fromWei(project.balance, 'Ether'))}`\n                          : '-'}\n                        <em> Ethers</em>\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <small className=\"text-muted\">\n                          <em style={{ fontSize: '0.9em' }}>\n                            Organized By: {project && project.owner ? project.owner : '-'}\n                          </em>\n                        </small>\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card.Body>\n                  {project && project.exists ? (\n                    <Card.Footer className=\"bg-white\">\n                      <div className=\"row p-2\">\n                        <div className=\"col-md-6\">\n                          <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                              <span className=\"input-group-text\" id=\"basic-addon1\">\n                                <i className=\"fab fa-ethereum\" style={{ fontSize: '1.5em' }} />\n                              </span>\n                            </div>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id={project.id}\n                              name={project.id}\n                              maxLength=\"9\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <Button\n                            name={project.id}\n                            style={{ color: 'white', float: 'left' }}\n                            variant={\n                              borderDesigns[Math.floor(Math.random() * borderDesigns.length)]\n                            }\n                            onClick={(e) => {\n                              fundProject(\n                                e.target.name,\n                                document.getElementById(`${project.id}`).value,\n                              );\n                              document.getElementById(`${project.id}`).value = '';\n                            }}\n                          >\n                            Donate\n                          </Button>\n                          <DropdownButton\n                            id=\"dropdown-basic\"\n                            variant=\"light\"\n                            title=\"\"\n                            className=\"float-right\"\n                            style={{ marginLeft: '80%' }}\n                          >\n                            <Dropdown.Item\n                              as=\"button\"\n                              name={project.id}\n                              onClick={(e) => {\n                                closeProject(e.target.name);\n                              }}\n                            >\n                              Close Project\n                            </Dropdown.Item>\n                          </DropdownButton>\n                        </div>\n                      </div>\n                    </Card.Footer>\n                  ) : (\n                    ''\n                  )}\n                </Card>\n              </div>\n            ))\n          ) : (\n            <div className=\"p-4\">\n              <Alert variant=\"danger\">No Projects Found!</Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMain.propTypes = {\n  createProject: PropTypes.func,\n  fundProject: PropTypes.func,\n  closeProject: PropTypes.func,\n  projects: PropTypes.arrayOf(PropTypes.object),\n};\n\nMain.defaultProps = {\n  createProject: null,\n  fundProject: null,\n  closeProject: null,\n  projects: [],\n};\n\nexport default Main;\n","import React from 'react';\n\nfunction Loader() {\n  return (\n    <div className=\"d-flex justify-content-center align-items-center\">\n      <i className=\"fas fa-spinner fa-pulse fa-4x\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/crowfunding.70a79183.jpg\";","/* eslint-disable max-len */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-await-in-loop */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-alert */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport './App.css';\r\nimport Web3 from 'web3';\r\nimport Navbar from './Navbar';\r\nimport Main from './Main';\r\nimport Loader from '../global/Loader';\r\nimport bgimage from '../assets/crowfunding.jpg';\r\n// Blockchain stuff\r\nimport CrowdFunding from '../abis/Crowdfunding.json';\r\n\r\nfunction App() {\r\n  const [currentAccount, setCurrentAccount] = useState('');\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [crowdFunding, setCrowdFunding] = useState({});\r\n\r\n  const loadWeb3 = async () => {\r\n    // Modern dapp browsers...\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      try {\r\n        await window.ethereum.enable();\r\n        const { web3 } = window;\r\n        // Load Accounts\r\n        const accounts = await web3.eth.getAccounts();\r\n        // Set current Account to State\r\n        setCurrentAccount(accounts[0]);\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'User Rejected the Request!',\r\n        });\r\n      }\r\n    }\r\n    // Legacy dapp Browser...\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Non-Ethereum browser detected. You should consider trying MetaMask!',\r\n      });\r\n    }\r\n  };\r\n\r\n  const getDatafromWeb3 = async () => {\r\n    if (window.web3) {\r\n      const { web3 } = window;\r\n      // Load Accounts\r\n      const accounts = await web3.eth.getAccounts();\r\n      // Set current Account to State\r\n      setCurrentAccount(accounts[0]);\r\n      // Get networkId (enable this for ganache)\r\n      // const networkId = await web3.eth.net.getId();\r\n      // const networkData = CrowdFunding.networks[networkId];\r\n      // Get abi Data from ABI json file\r\n      try {\r\n        const { abi } = CrowdFunding;\r\n        // let { address } = networkData;\r\n        let address;\r\n        if(process.env.REACT_APP_TESTNET_CONTRACT_ADDRESS) address = process.env.REACT_APP_TESTNET_CONTRACT_ADDRESS;\r\n        // Deployed Binance Testnet Contract Address:0x68543df724508Bd8Af4361587cF0fE4E8f9298f1\r\n        const marketplace = new web3.eth.Contract(abi, address); \r\n        setCrowdFunding({ ...marketplace });\r\n        const projectCounter = await marketplace.methods.projectCount().call();\r\n        const projectLists = [];\r\n        for (let i = 1; i <= projectCounter; i++) {\r\n          const project = await marketplace.methods.projects(i).call();\r\n          projectLists.push(project);\r\n        }\r\n        setProjects(projectLists);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Contract not deployed to detected Network!',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const createProject = async (name, desc, target, closingDate) => {\r\n    setLoading(true);\r\n    try {\r\n      crowdFunding.methods\r\n        .createProject(name, desc, target, closingDate)\r\n        .send({ from: currentAccount })\r\n        .once('receipt', async (receipt) => {\r\n          await getDatafromWeb3();\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: e.message,\r\n          });\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fundProject = async (id, amount) => {\r\n    setLoading(true);\r\n    try {\r\n      const WeiAmt = window.web3.utils.toWei(amount, 'Ether');\r\n      crowdFunding.methods\r\n        .fundProject(id)\r\n        .send({ from: currentAccount, value: WeiAmt })\r\n        .once('receipt', async (receipt) => {\r\n          await getDatafromWeb3();\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          let err;\r\n          if (e.code === -32603) err = \"Owner can't fund the project created by themselves\";\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err || e.message,\r\n          });\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const closeProject = async (id) => {\r\n    setLoading(true);\r\n    try {\r\n      crowdFunding.methods\r\n        .closeProject(id)\r\n        .send({ from: currentAccount })\r\n        .once('receipt', async (receipt) => {\r\n          await getDatafromWeb3();\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          let err;\r\n          if (e.code === -32603) err = 'Only Project Owner can close this project.';\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err || e.message,\r\n          });\r\n          setLoading(false);\r\n        });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await loadWeb3();\r\n    await getDatafromWeb3();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar account={currentAccount || ''} />\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <main className=\"col-lg-12\">\r\n            <div\r\n              className=\"p-md-5 mb-4 text-white rounded\"\r\n              style={{\r\n                backgroundImage: `url(${bgimage})`,\r\n                height: '400px',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n              }}\r\n            />\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Main\r\n                createProject={createProject}\r\n                fundProject={fundProject}\r\n                projects={projects}\r\n                closeProject={closeProject}\r\n              />\r\n            )}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}